apiVersion: apps/v1
kind: Deployment
metadata:
  name: APP_NAME
  labels:
    app.kubernetes.io/name: APP_NAME
    app.kubernetes.io/part-of: APP_NAME-multi-language
    app.kubernetes.io/version: v1.0.0
    app.kubernetes.io/component: application
    app.kubernetes.io/managed-by: flux
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: APP_NAME
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        app.kubernetes.io/name: APP_NAME
        app.kubernetes.io/part-of: APP_NAME-multi-language
        app.kubernetes.io/version: v1.0.0
        app.kubernetes.io/component: application
        app.kubernetes.io/managed-by: flux
    spec:
      terminationGracePeriodSeconds: 30
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: APP_NAME
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: APP_NAME
      serviceAccountName: APP_NAME
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: APP_NAME
          image: APP_IMAGE:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
          env:
            - name: GREETING
              valueFrom:
                secretKeyRef:
                  name: APP_NAME-secret
                  key: greeting
            - name: FAIL_RATE
              valueFrom:
                configMapKeyRef:
                  name: APP_NAME-config
                  key: fail_rate
            - name: READINESS_DELAY_SEC
              valueFrom:
                configMapKeyRef:
                  name: APP_NAME-config
                  key: readiness_delay_sec
            # OpenTelemetry Configuration
            - name: SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: APP_NAME-config
                  key: service_name
            - name: SERVICE_VERSION
              valueFrom:
                configMapKeyRef:
                  name: APP_NAME-config
                  key: service_version
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: APP_NAME-config
                  key: environment
            - name: ALLOY_URL
              valueFrom:
                configMapKeyRef:
                  name: APP_NAME-config
                  key: alloy_url
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: APP_NAME-config
                  key: port
            # Service-to-service communication URLs (for API Gateway)
            - name: USER_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: APP_NAME-config
                  key: user_service_url
            - name: NOTIFICATION_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: APP_NAME-config
                  key: notification_service_url
          startupProbe:
            httpGet:
              path: /healthz
              port: 8000
            failureThreshold: 30
            periodSeconds: 2
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
            successThreshold: 2
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "300m"
              memory: "256Mi"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: false
      volumes:
        - name: tmp
          emptyDir: {}

